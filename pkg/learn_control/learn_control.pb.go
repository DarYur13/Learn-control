// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.21.12
// source: learn_control.proto

package learn_control

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetEmployeesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetEmployeesRequest) Reset() {
	*x = GetEmployeesRequest{}
	mi := &file_learn_control_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEmployeesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmployeesRequest) ProtoMessage() {}

func (x *GetEmployeesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_learn_control_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmployeesRequest.ProtoReflect.Descriptor instead.
func (*GetEmployeesRequest) Descriptor() ([]byte, []int) {
	return file_learn_control_proto_rawDescGZIP(), []int{0}
}

func (x *GetEmployeesRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetEmployeesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Employees []*EmployeeBaseInfo `protobuf:"bytes,1,rep,name=employees,proto3" json:"employees,omitempty"`
}

func (x *GetEmployeesResponse) Reset() {
	*x = GetEmployeesResponse{}
	mi := &file_learn_control_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEmployeesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmployeesResponse) ProtoMessage() {}

func (x *GetEmployeesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_learn_control_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmployeesResponse.ProtoReflect.Descriptor instead.
func (*GetEmployeesResponse) Descriptor() ([]byte, []int) {
	return file_learn_control_proto_rawDescGZIP(), []int{1}
}

func (x *GetEmployeesResponse) GetEmployees() []*EmployeeBaseInfo {
	if x != nil {
		return x.Employees
	}
	return nil
}

type EmployeeBaseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Fullname  string `protobuf:"bytes,2,opt,name=fullname,proto3" json:"fullname,omitempty"`
	Birthdate string `protobuf:"bytes,3,opt,name=birthdate,proto3" json:"birthdate,omitempty"`
}

func (x *EmployeeBaseInfo) Reset() {
	*x = EmployeeBaseInfo{}
	mi := &file_learn_control_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmployeeBaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmployeeBaseInfo) ProtoMessage() {}

func (x *EmployeeBaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_learn_control_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmployeeBaseInfo.ProtoReflect.Descriptor instead.
func (*EmployeeBaseInfo) Descriptor() ([]byte, []int) {
	return file_learn_control_proto_rawDescGZIP(), []int{2}
}

func (x *EmployeeBaseInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EmployeeBaseInfo) GetFullname() string {
	if x != nil {
		return x.Fullname
	}
	return ""
}

func (x *EmployeeBaseInfo) GetBirthdate() string {
	if x != nil {
		return x.Birthdate
	}
	return ""
}

type GetEmployeeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetEmployeeRequest) Reset() {
	*x = GetEmployeeRequest{}
	mi := &file_learn_control_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEmployeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmployeeRequest) ProtoMessage() {}

func (x *GetEmployeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_learn_control_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmployeeRequest.ProtoReflect.Descriptor instead.
func (*GetEmployeeRequest) Descriptor() ([]byte, []int) {
	return file_learn_control_proto_rawDescGZIP(), []int{3}
}

func (x *GetEmployeeRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetEmployeeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fullname   string      `protobuf:"bytes,1,opt,name=fullname,proto3" json:"fullname,omitempty"`
	Birthdate  string      `protobuf:"bytes,2,opt,name=birthdate,proto3" json:"birthdate,omitempty"`
	Department string      `protobuf:"bytes,3,opt,name=department,proto3" json:"department,omitempty"`
	Position   string      `protobuf:"bytes,4,opt,name=position,proto3" json:"position,omitempty"`
	Snils      string      `protobuf:"bytes,5,opt,name=snils,proto3" json:"snils,omitempty"`
	Trainings  []*Training `protobuf:"bytes,6,rep,name=trainings,proto3" json:"trainings,omitempty"`
}

func (x *GetEmployeeResponse) Reset() {
	*x = GetEmployeeResponse{}
	mi := &file_learn_control_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEmployeeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmployeeResponse) ProtoMessage() {}

func (x *GetEmployeeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_learn_control_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmployeeResponse.ProtoReflect.Descriptor instead.
func (*GetEmployeeResponse) Descriptor() ([]byte, []int) {
	return file_learn_control_proto_rawDescGZIP(), []int{4}
}

func (x *GetEmployeeResponse) GetFullname() string {
	if x != nil {
		return x.Fullname
	}
	return ""
}

func (x *GetEmployeeResponse) GetBirthdate() string {
	if x != nil {
		return x.Birthdate
	}
	return ""
}

func (x *GetEmployeeResponse) GetDepartment() string {
	if x != nil {
		return x.Department
	}
	return ""
}

func (x *GetEmployeeResponse) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *GetEmployeeResponse) GetSnils() string {
	if x != nil {
		return x.Snils
	}
	return ""
}

func (x *GetEmployeeResponse) GetTrainings() []*Training {
	if x != nil {
		return x.Trainings
	}
	return nil
}

type Training struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Date     string `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Nextdate string `protobuf:"bytes,3,opt,name=nextdate,proto3" json:"nextdate,omitempty"`
}

func (x *Training) Reset() {
	*x = Training{}
	mi := &file_learn_control_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Training) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Training) ProtoMessage() {}

func (x *Training) ProtoReflect() protoreflect.Message {
	mi := &file_learn_control_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Training.ProtoReflect.Descriptor instead.
func (*Training) Descriptor() ([]byte, []int) {
	return file_learn_control_proto_rawDescGZIP(), []int{5}
}

func (x *Training) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Training) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *Training) GetNextdate() string {
	if x != nil {
		return x.Nextdate
	}
	return ""
}

var File_learn_control_proto protoreflect.FileDescriptor

var file_learn_control_proto_rawDesc = []byte{
	0x0a, 0x13, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x41, 0x72, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x65, 0x61, 0x72,
	0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x29, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x7a, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x09, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x41, 0x72, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x2e, 0x6c, 0x65, 0x61, 0x72,
	0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x65,
	0x61, 0x72, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x45, 0x6d, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x65, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x65, 0x6d,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x22, 0x5c, 0x0a, 0x10, 0x45, 0x6d, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x65, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x72, 0x74,
	0x68, 0x64, 0x61, 0x74, 0x65, 0x22, 0x2d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00,
	0x52, 0x02, 0x69, 0x64, 0x22, 0xfd, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x69, 0x72, 0x74,
	0x68, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x72,
	0x74, 0x68, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6e, 0x69, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x6e, 0x69, 0x6c, 0x73, 0x12, 0x5a, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x41, 0x72, 0x74, 0x65, 0x6e, 0x73, 0x6f,
	0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x2e, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x73, 0x22, 0x4e, 0x0a, 0x08, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x65, 0x78, 0x74,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74,
	0x64, 0x61, 0x74, 0x65, 0x32, 0x86, 0x03, 0x0a, 0x0c, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0xbc, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x12, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x41, 0x72, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x2e, 0x6c, 0x65, 0x61, 0x72,
	0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x65,
	0x61, 0x72, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x45,
	0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x48, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x41, 0x72, 0x74,
	0x65, 0x6e, 0x73, 0x6f, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x13, 0x3a, 0x01, 0x2a, 0x22, 0x0e, 0x2f, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73,
	0x2f, 0x67, 0x65, 0x74, 0x12, 0xb6, 0x01, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x65, 0x12, 0x46, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x41, 0x72, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x65, 0x61, 0x72,
	0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x47, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x41, 0x72, 0x74, 0x65, 0x6e, 0x73,
	0x6f, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f,
	0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x42, 0x35, 0x5a,
	0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x44, 0x61, 0x72, 0x59,
	0x75, 0x72, 0x31, 0x33, 0x2f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_learn_control_proto_rawDescOnce sync.Once
	file_learn_control_proto_rawDescData = file_learn_control_proto_rawDesc
)

func file_learn_control_proto_rawDescGZIP() []byte {
	file_learn_control_proto_rawDescOnce.Do(func() {
		file_learn_control_proto_rawDescData = protoimpl.X.CompressGZIP(file_learn_control_proto_rawDescData)
	})
	return file_learn_control_proto_rawDescData
}

var file_learn_control_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_learn_control_proto_goTypes = []any{
	(*GetEmployeesRequest)(nil),  // 0: github.com.Artenso.learn_control.api.learn_control.GetEmployeesRequest
	(*GetEmployeesResponse)(nil), // 1: github.com.Artenso.learn_control.api.learn_control.GetEmployeesResponse
	(*EmployeeBaseInfo)(nil),     // 2: github.com.Artenso.learn_control.api.learn_control.EmployeeBaseInfo
	(*GetEmployeeRequest)(nil),   // 3: github.com.Artenso.learn_control.api.learn_control.GetEmployeeRequest
	(*GetEmployeeResponse)(nil),  // 4: github.com.Artenso.learn_control.api.learn_control.GetEmployeeResponse
	(*Training)(nil),             // 5: github.com.Artenso.learn_control.api.learn_control.Training
}
var file_learn_control_proto_depIdxs = []int32{
	2, // 0: github.com.Artenso.learn_control.api.learn_control.GetEmployeesResponse.employees:type_name -> github.com.Artenso.learn_control.api.learn_control.EmployeeBaseInfo
	5, // 1: github.com.Artenso.learn_control.api.learn_control.GetEmployeeResponse.trainings:type_name -> github.com.Artenso.learn_control.api.learn_control.Training
	0, // 2: github.com.Artenso.learn_control.api.learn_control.LearnControl.GetEmployees:input_type -> github.com.Artenso.learn_control.api.learn_control.GetEmployeesRequest
	3, // 3: github.com.Artenso.learn_control.api.learn_control.LearnControl.GetEmployee:input_type -> github.com.Artenso.learn_control.api.learn_control.GetEmployeeRequest
	1, // 4: github.com.Artenso.learn_control.api.learn_control.LearnControl.GetEmployees:output_type -> github.com.Artenso.learn_control.api.learn_control.GetEmployeesResponse
	4, // 5: github.com.Artenso.learn_control.api.learn_control.LearnControl.GetEmployee:output_type -> github.com.Artenso.learn_control.api.learn_control.GetEmployeeResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_learn_control_proto_init() }
func file_learn_control_proto_init() {
	if File_learn_control_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_learn_control_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_learn_control_proto_goTypes,
		DependencyIndexes: file_learn_control_proto_depIdxs,
		MessageInfos:      file_learn_control_proto_msgTypes,
	}.Build()
	File_learn_control_proto = out.File
	file_learn_control_proto_rawDesc = nil
	file_learn_control_proto_goTypes = nil
	file_learn_control_proto_depIdxs = nil
}

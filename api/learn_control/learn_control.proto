syntax = "proto3";

package github.com.Artenso.learn_control.api.learn_control;

option go_package = "github.com/DarYur13/learn_control/pkg/learn_control";

import "validate/validate.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

service LearnControl {
    rpc GetEmployeesByName (GetEmployeesByNameRequest) returns (GetEmployeesByNameResponse) {
        option (google.api.http) = {
            post: "/employees/get/by_name"
            body: "*"
          };
    };

    rpc GetEmployee (GetEmployeeRequest) returns (GetEmployeeResponse) {
        option (google.api.http) = {
            post: "/employee/personal_card/get"
          };
    };

    rpc SetEmployeeTrainingDate (SetEmployeeTrainingDateRequest) returns (SetEmployeeTrainingDateResponse) {
        option (google.api.http) = {
            post: "/employee/training_date/set"
            body: "*"
          };
    };

    rpc UpdateEmployeeTrainingDate (UpdateEmployeeTrainingDateRequest) returns (UpdateEmployeeTrainingDateResponse) {
        option (google.api.http) = {
            post: "/employee/training_date/change"
            body: "*"
          };
    };

    rpc GetFilters (GetFiltersRequest) returns (GetFiltersResponse) {
        option (google.api.http) = {
            get: "/employees/filters/get"
        };
    }

    rpc GetEmployees (GetEmployeesRequest) returns (GetEmployeesResponse) {
        option (google.api.http) = {
            get: "/employees/get/by_filters"
        };
    }
}

message GetEmployeesByNameRequest {
    string name = 1;
}

message GetEmployeesByNameResponse {
    repeated EmployeeBaseInfo employees = 1;
}

message EmployeeBaseInfo {
    int64 id = 1;
    string fullname = 2;
    string birthdate = 3;
}

message GetEmployeeRequest {
    int64 id = 1 [(validate.rules).int64.gt = 0];
}

message GetEmployeeResponse {
    string fullname = 1;
    string birthdate = 2;
    string department = 3;
    string position = 4;
    string snils = 5;
    repeated Training trainings = 6;
}

message Training {
    string name = 1;
    string passDate = 2;
    string rePassDate = 3;
}

message SetEmployeeTrainingDateRequest {
    int64 employeeID = 1;
    int64 trainigID = 2;
    string date = 3;
}

message SetEmployeeTrainingDateResponse {
    string passDate = 3;
    string rePassDate = 4;
}

message UpdateEmployeeTrainingDateRequest {
    int64 employeeID = 1;
    int64 trainigID = 2;
    string date = 3;
}

message UpdateEmployeeTrainingDateResponse {
    string passDate = 3;
    string rePassDate = 4;
}

message GetFiltersRequest {}

message GetFiltersResponse {
    repeated FilterBaseInfo departments = 1;
    repeated FilterBaseInfo positions = 2;
    repeated FilterBaseInfo trainings = 3;
}

message FilterBaseInfo {
    int64 id = 1;
    string name = 2;
}

message GetEmployeesRequest {
    optional int64 departmentID = 1;
    optional int64 positionID = 2;
    optional int64 trainingID = 3;
    optional int64 retrainingIn = 4; 
    optional bool trainigsPassed = 5;
}

message GetEmployeesResponse {
    repeated EmployeeInfo employees = 1;
}

message EmployeeInfo {
    int64 id = 1;
    string fullname = 2;
    string department = 4;
    string position = 5;
    repeated Training trainings = 6;
}
syntax = "proto3";

package github.com.Artenso.learn_control.api.learn_control;

option go_package = "github.com/DarYur13/learn_control/pkg/learn_control";

import "validate/validate.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

enum taskType {
    UNSPECIFIED = 0;
    PROVIDE = 1;
    ASSIGN = 2;
    CHOOSE = 3;
    SET = 4;
    CONFIRM = 5;
}


service LearnControl {
    rpc GetEmployeesByName (GetEmployeesByNameRequest) returns (GetEmployeesByNameResponse) {
        option (google.api.http) = {
            post: "/employees/get_list_by_name"
            body: "*"
          };
    };

    rpc GetEmployeePersonalCard (GetEmployeePersonalCardRequest) returns (GetEmployeePersonalCardResponse) {
        option (google.api.http) = {
            post: "/employees/get_personal_card"
            body: "*"
          };
    };

    rpc UpdateEmployeeTrainingDate (UpdateEmployeeTrainingDateRequest) returns (UpdateEmployeeTrainingDateResponse) {
        option (google.api.http) = {
            post: "/employees/update_training_date"
            body: "*"
          };
    };

    rpc GetDepartments (google.protobuf.Empty) returns (GetDepartmentsResponse) {
        option (google.api.http) = {
            get: "/departments/get"
        };
    }

    rpc GetPositions (google.protobuf.Empty) returns (GetPositionsResponse) {
        option (google.api.http) = {
            get: "/positions/get"
        };
    }

    rpc GetTrainings (google.protobuf.Empty) returns (GetTrainingsResponse) {
        option (google.api.http) = {
            get: "/trainings/get"
        };
    }

    rpc GetEmployeesByFilters (GetEmployeesByFiltersRequest) returns (GetEmployeesByFiltersResponse) {
        option (google.api.http) = {
            post: "/employees/get_list_by_filters"
            body: "*"
        };
    }

    rpc AddEmployee (AddEmployeeRequest) returns (google.protobuf.Empty){
        option (google.api.http) = {
            post: "/employees/add"
            body: "*"
        };
    }

    rpc GetTasksByFilters (GetTasksByFiltersRequest) returns (GetTasksByFiltersResponse){
        option (google.api.http) = {
            get: "/tasks/get"
        };
    }
}

message GetTasksByFiltersRequest {
    optional bool done = 1;    
}

message GetTasksByFiltersResponse{
    repeated Task tasks = 1;
}

message Task {
    taskType type = 1;
    string description = 2;
    string employee = 3;
    string training = 4;
    string position = 5;
    string department = 6;
    string executor = 7;
}

message AddEmployeeRequest {
    string fullname = 1 [(validate.rules).string = {min_len: 1}];
    string birthdate = 2 [(validate.rules).string = {min_len: 10}];
    string department = 3 [(validate.rules).string = {min_len: 1}];
    string position = 4 [(validate.rules).string = {min_len: 1}];
    string employmentDate = 5 [(validate.rules).string = {min_len: 10}];
    string snils = 6 [(validate.rules).string = {pattern: "^[0-9]{3}-[0-9]{3}-[0-9]{3} [0-9]{2}$"}];
}

// message AddEmployeeResponse{
//     int64 id = 1;
//     bool trainingsAssigned = 2;
//     repeated TrainingBaseInfo trainings = 3;
// }

message GetEmployeesByNameRequest {
    string name = 1;
}

message GetEmployeesByNameResponse {
    repeated EmployeeBaseInfo employees = 1;
}

message EmployeeBaseInfo {
    int64 id = 1;
    string fullname = 2;
    string birthdate = 3;
}

message GetEmployeePersonalCardRequest {
    int64 id = 1 [(validate.rules).int64.gt = 0];
}

message GetEmployeePersonalCardResponse {
    string fullname = 1;
    string birthdate = 2;
    string department = 3;
    string position = 4;
    string employmentDate = 5;
    string snils = 6;
    repeated Training trainings = 7;
}

message Training {
    string name = 1;
    string passDate = 2;
    string rePassDate = 3;
    string hasProtocol = 4;
}

message UpdateEmployeeTrainingDateRequest {
    int64 employeeID = 1;
    int64 trainingID = 2;
    google.protobuf.Timestamp date = 3;
}

message UpdateEmployeeTrainingDateResponse {
    string passDate = 3;
    string rePassDate = 4;
}

message GetEmployeesByFiltersRequest {
    optional string department = 1;
    optional string position = 2;
    optional int64 trainingID = 3;
    optional int64 retrainingIn = 4; 
    optional bool trainigsNotPassed = 5;
    optional google.protobuf.Timestamp dateFrom = 6;
    optional google.protobuf.Timestamp dateTo = 7;
    optional bool hasProtocol = 8;
}

message GetEmployeesByFiltersResponse {
    repeated EmployeeInfo employees = 1;
}

message EmployeeInfo {
    string fullname = 1;
    string department = 2;
    string position = 3;
    repeated Training trainings = 4;
}

message GetDepartmentsResponse {
    repeated string departments = 1;
}

message GetPositionsResponse {
    repeated string positions = 1;
}

message GetTrainingsResponse {
    repeated TrainingBaseInfo trainings = 3;
}

message TrainingBaseInfo {
    int64 id = 1;
    string name = 2;
}